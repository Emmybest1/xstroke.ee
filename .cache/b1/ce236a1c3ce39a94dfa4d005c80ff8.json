{"id":"node_modules/lazy-ass/index.html","dependencies":[{"name":"./index.js","dynamic":true,"resolved":"/Users/emmanuelonah/code/__thesis-project/stroke-expert-expert/node_modules/lazy-ass/index.js","parent":"/Users/emmanuelonah/code/__thesis-project/stroke-expert-expert/node_modules/lazy-ass/index.html"},{"name":"_css_loader","parent":"/Users/emmanuelonah/code/__thesis-project/stroke-expert-expert/node_modules/lazy-ass/index.html","resolved":"/Users/emmanuelonah/code/__thesis-project/stroke-expert-expert/node_modules/parcel-bundler/src/builtins/css-loader.js"},{"name":"/Users/emmanuelonah/code/__thesis-project/stroke-expert-expert/package.json","includedInParent":true,"mtime":1600457095933},{"name":"/Users/emmanuelonah/code/__thesis-project/stroke-expert-expert/.babelrc","includedInParent":true,"mtime":1600205863818},{"name":"/Users/emmanuelonah/code/__thesis-project/stroke-expert-expert/node_modules/lazy-ass/package.json","includedInParent":true,"mtime":1600191143040}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>lazy-ass</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/es5-shim/4.3.1/es5-shim.js\"></script>\n    <script src=\"/4593a1ecfc9a13d1603304b22771a39c.js\"></script>\n    <style>#log {\n        margin: 10px 0px;\n        display: block;\n        white-space: pre;\n        font-family: monospace;\n      }\n      #log:before {\n        content: \"the javascript:\";\n        font-style: italic;\n        color: #555;\n      }</style>\n  </head>\n  <body>\n    <h1>lazy-ass</h1>\n    <p>Simple assertions with as many arguments as needed and intelligent serialization</p>\n\n    <script src=\"https://rawgit.com/bahmutov/console-log-div/master/console-log-div.js\"></script>\n\n    <script id=\"log\">if (typeof lazyAss === 'undefined') {\n  throw new Error('Cannot find lazyAss object');\n}\n\nconsole.log('Found lazyAss function');\nvar foo = 3;\nlac(foo === 'foo', 'this is an async exception', foo);\nconsole.log('after async exception'); // cannot be serialized to JSON due to circular reference\n\nvar bar = {\n  name: 'bar'\n};\nbar.bar = bar;\nlac(false, 'example printing a circular object', bar);\nlac(false, {\n  foo: 'foo',\n  bar: undefined\n}, 'this object has property \"bar\" with undefined value');\nla(typeof foo === 'string', 'sync exception, variable foo is NOT a string, but', typeof foo, foo); // nothing runs after sync exception</script>\n  </body>\n</html>\n"},"sourceMaps":null,"error":null,"hash":"61a2ab2409539c24987d9dbc5a532301","cacheData":{"env":{}}}